// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class ProjectColumn extends pulumi.CustomResource {
    /**
     * Get an existing ProjectColumn resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ProjectColumnState, opts?: pulumi.CustomResourceOptions): ProjectColumn {
        return new ProjectColumn(name, <any>state, { ...opts, id: id });
    }

    public /*out*/ readonly etag: pulumi.Output<string>;
    public readonly name: pulumi.Output<string>;
    public readonly projectId: pulumi.Output<string>;

    /**
     * Create a ProjectColumn resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ProjectColumnArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ProjectColumnArgs | ProjectColumnState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state: ProjectColumnState = argsOrState as ProjectColumnState | undefined;
            inputs["etag"] = state ? state.etag : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["projectId"] = state ? state.projectId : undefined;
        } else {
            const args = argsOrState as ProjectColumnArgs | undefined;
            if (!args || args.name === undefined) {
                throw new Error("Missing required property 'name'");
            }
            if (!args || args.projectId === undefined) {
                throw new Error("Missing required property 'projectId'");
            }
            inputs["name"] = args ? args.name : undefined;
            inputs["projectId"] = args ? args.projectId : undefined;
            inputs["etag"] = undefined /*out*/;
        }
        super("github:index/projectColumn:ProjectColumn", name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ProjectColumn resources.
 */
export interface ProjectColumnState {
    readonly etag?: pulumi.Input<string>;
    readonly name?: pulumi.Input<string>;
    readonly projectId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ProjectColumn resource.
 */
export interface ProjectColumnArgs {
    readonly name: pulumi.Input<string>;
    readonly projectId: pulumi.Input<string>;
}
